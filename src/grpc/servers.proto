syntax = "proto3";

option csharp_namespace = "Bouncer.Grpc";

option java_package = "io.quut.bouncer.grpc";
option java_multiple_files = true;

package servers;

import "google/protobuf/duration.proto";

service ServerService {
	rpc Session (stream ServerSessionRequest) returns (stream ServerSessionResponse);

	rpc Listen (ServerListenRequest) returns (stream ServerStatusUpdate);
	rpc List (ServerListRequest) returns (ServerListResponse);

	rpc Join (ServerJoinRequest) returns (ServerJoinResponse);
}

message ServerSessionRequest {
	optional int32 requestId = 1;

	oneof request {
		ServerSessionClose close = 2;
		ServerSessionPing ping = 3;

		ServerRegistrationRequest registration = 4;
		ServerUnregistrationRequest unregistration = 5;

		ServerStatusUpdateRequest update = 6;
	}
}

message ServerSessionClose {
}

message ServerSessionPing {
}

message ServerRegistrationRequest {
	ServerData data = 1;
}

message ServerUnregistrationRequest {
	int32 serverId = 1;
}

message ServerStatusUpdateRequest {
	int32 serverId = 1;

	oneof update {
		ServerStatusUserJoin userJoin = 2;
		ServerStatusUserQuit userQuit = 3;

		ServerHeartbeat heartbeat = 4;
	}
}

message ServerSessionResponse {
	optional int32 requestId = 1;

	oneof response {
		ServerSessionSettings settings = 2;
		ServerRegistrationResponse registration = 3;
	}
}

message ServerSessionSettings {
	google.protobuf.Duration pingInterval = 1;
}

message ServerRegistrationResponse {
	int32 serverId = 1;
}

message ServerListenRequest {
	repeated ServerFilter filter = 1;
}

message ServerStatusUpdate {
	int32 serverId = 1;

	oneof update {
		ServerStatusAdd add = 2;
		ServerStatusRemove remove = 3;

		ServerStatusUserJoin userJoin = 4;
		ServerStatusUserQuit userQuit = 5;

		ServerHeartbeat heartbeat = 6;
	}
}

message ServerListRequest {
}

message ServerListResponse {
	repeated ServerListData servers = 1;
}

message ServerJoinRequest {
	repeated ServerFilter filter = 1;
	repeated ServerSort sort = 2;

	repeated bytes user = 3;
}

message ServerJoinResponse {
	oneof status {
		ServerJoinSuccess success = 1;
		ServerJoinNoServers noServers = 2;
	}
}

message ServerJoinSuccess {
	int32 serverId = 1;
}

message ServerJoinNoServers {
}

message ServerStatusAdd {
	ServerData data = 1;
}

message ServerStatusRemove {
	ServerRemoveReason reason = 1;
}

enum ServerRemoveReason {
	unspecified = 0;
	unregistration = 1;
	timeout = 2;
}

message ServerStatusUserJoin {
	bytes user = 1;
}

message ServerStatusUserQuit {
	bytes user = 1;
}

message ServerData {
	string name = 1;
	string group = 2;
	string type = 3;

	string host = 4;
	int32 port = 5;

	optional int32 tps = 6;
	optional int32 memory = 7;
	optional int32 maxMemory = 8;
}

message ServerHeartbeat {
	optional int32 tps = 1;
	optional int32 memory = 2;
}

message ServerFilter {
	bool inverse = 4;
	oneof condition {
		ServerFilterName name = 1;
		ServerFilterGroup group = 2;
		ServerFilterType type = 3;
	}
}

message ServerFilterName {
	string value = 1;
}

message ServerFilterGroup {
	string value = 1;
}

message ServerFilterType {
	string value = 1;
}

message ServerSort {
	oneof sort {
		ServerSortByPlayerCount byPlayerCount = 1;
	}
}

message ServerSortByPlayerCount {
	Order value = 1;

	enum Order {
		Default = 0;
		Ascending = 1;
		Descending = 2;
	}
}

message ServerListData {
	int32 serverId = 1;

	ServerData data = 2;

	repeated string players = 3;
}
